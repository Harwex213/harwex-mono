const baseCommonRules = {
  "@stylistic/js/array-element-newline": ["error", "consistent"],
  "@stylistic/js/array-bracket-spacing": ["error", "never"],
  "@stylistic/js/arrow-parens": ["error", "always"],
  "@stylistic/js/arrow-spacing": "error",
  "@stylistic/js/brace-style": ["error", "1tbs"],
  "@stylistic/js/comma-dangle": ["error", "always-multiline"],
  "@stylistic/js/comma-spacing": ["error", { before: false, after: true }],
  "@stylistic/js/eol-last": ["error", "always"],
  "@stylistic/js/func-call-spacing": "error",
  "@stylistic/js/function-call-argument-newline": ["error", "consistent"],
  "@stylistic/js/indent": ["error", 2, { SwitchCase: 1 }],
  "@stylistic/js/key-spacing": ["error", { mode: "strict" }],
  "@stylistic/js/max-len": [
    "error",
    140,
    2,
    {
      ignoreUrls: true,
      ignoreComments: true,
      ignoreTrailingComments: true,
      ignoreRegExpLiterals: true,
      ignoreStrings: true,
      ignoreTemplateLiterals: true,
      ignorePattern: "^import [^,]+ from |^export | implements | `.{30,}`",
    },
  ],
  "@stylistic/js/multiline-ternary": ["error", "always-multiline"],
  "@stylistic/js/newline-per-chained-call": ["error", { ignoreChainWithDepth: 3 }],
  "@stylistic/js/no-mixed-operators": "error",
  "@stylistic/js/no-multiple-empty-lines": ["error", { max: 1 }],
  "@stylistic/js/no-trailing-spaces": "error",
  "@stylistic/js/object-curly-spacing": ["error", "always"],
  "@stylistic/js/object-curly-newline": ["error", { consistent: true }],
  "@stylistic/js/operator-linebreak": "error",
  "@stylistic/js/padded-blocks": [
    "error",
    {
      blocks: "never",
      classes: "never",
      switches: "never",
    },
  ],
  "@stylistic/js/quotes": ["error", "double"],
  "@stylistic/js/semi": ["error", "always"],
  "@stylistic/js/space-before-function-paren": [
    "error",
    {
      anonymous: "always",
      named: "never",
      asyncArrow: "always",
    },
  ],

  "import/namespace": "off",
  "import/no-unresolved": "off",
  "import/no-extraneous-dependencies": ["warn", { peerDependencies: true, optionalDependencies: true }],
  "import/no-duplicates": "error",

  // "rulesdir/no-disabled-checks": "warn",
  // "rulesdir/no-invalid-selectors": "warn",
  // "rulesdir/sort-imports": "error",
  // "rulesdir/no-empty-lines-between-imports": "error",
  // "rulesdir/specified-exports": "error",
  // "rulesdir/exports-location": "error",
  // "rulesdir/no-multiline-object-key": "error",
  // "rulesdir/object-prop-newline": "error",
  // "rulesdir/mono-imports": "error",
  // "rulesdir/no-forbidden-imports": "error",
  // "rulesdir/arguments-align": "error",
  // "rulesdir/no-truethly-default-assign": "error",
  // "rulesdir/partial-function-application": "error",

  "no-prototype-builtins": "off",
  "no-unused-vars": "off",
  "no-duplicate-imports": "off",
  "no-constant-condition": "warn",
  "no-console": "warn",
  "no-debugger": "warn",
  "prefer-const": "error",
  "no-param-reassign": ["warn", { props: false }],
  "consistent-return": "error",
  "arrow-body-style": ["error", "as-needed"],
  "curly": "error",
  "no-nested-ternary": "error",
  "no-unneeded-ternary": ["error", { defaultAssignment: false }],
  "no-empty": ["error", { allowEmptyCatch: true }],
  "no-empty-function": [
    "error",
    {
      allow: ["methods", "generatorMethods", "getters", "setters", "constructors", "asyncMethods"],
    },
  ],
  "no-restricted-syntax": [
    "error",
    {
      selector: "CallExpression[callee.name='atob']",
      message: "window.atob is deprecated. Use decodeBase64 from `@sb/utils`",
    },
    {
      selector: "CallExpression[callee.name='window.atob']",
      message: "window.atob is deprecated. Use decodeBase64 from `@sb/utils`",
    },
    {
      selector: "CallExpression[callee.name='btoa']",
      message: "window.btoa is deprecated. Use encodeBase64 from `@sb/utils`",
    },
    {
      selector: "CallExpression[callee.name='window.btoa']",
      message: "window.atob is deprecated. Use decodeBase64 from `@sb/utils`",
    },
  ],
};

export { baseCommonRules };
